{"version":3,"file":"static/js/login-modal.587667b3.chunk.js","mappings":"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","sources":["components/loginModal/loginModal.tsx"],"sourcesContent":["import { Tabs, message, Form, Input, Button, Modal } from 'antd'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { storage } from '../../common/storage'\r\nimport { login, register } from '../../redux/actions/user'\r\nimport \"./index.css\"\r\nconst FormItem = Form.Item\r\nconst { TabPane } = Tabs\r\ninterface userMessageOption {\r\n    userNickName: string;\r\n    userId: number\r\n}\r\ninterface ILoginModalProps {\r\n    modalVisible: boolean\r\n    setModalVisible: (modalVisible: boolean) => void\r\n}\r\n\r\nconst displayNoneStyle = { style: { display: 'none' } as React.CSSProperties };\r\nconst posRightStyle = {\r\n    textAlign: 'right'\r\n} as React.CSSProperties\r\nconst modalStyle = {\r\n    borderRadius: 6\r\n}\r\n\r\nexport default function LoginModal(props: ILoginModalProps) {\r\n    const { modalVisible, setModalVisible } = props\r\n    const [action, setAction] = useState('login')\r\n    const dispatch = useDispatch();\r\n\r\n    const [form1] = Form.useForm()\r\n    const [form2] = Form.useForm()\r\n    const handleCancel = useCallback(() => {\r\n        form2.resetFields()\r\n        setModalVisible(false)\r\n    }, [])\r\n    const handleOk = useCallback(() => {\r\n        form2.resetFields()\r\n        setModalVisible(false)\r\n    }, [])\r\n    const handleSubmitSuccess = useCallback((formData) => {\r\n        const username = formData.username;\r\n        const password = formData.password;\r\n        // const myFetchOptions = {\r\n        //     method: 'GET'\r\n        // };\r\n        // const params = `action=${action}&username=${formData.userName}&password=${formData.userPassword}` +\r\n        //     `&r_userName=${formData.newUserName}&r_password=${formData.newUserPassword}&r_confirmPassword=${formData.newSurePassword}`\r\n        // fetch(\"http://newsapi.gugujiankong.com/Handler.ashx?\" + params, myFetchOptions).then(response =>\r\n        //     response.json()).then(json => {\r\n        //         setUserMessage({ userNickName: json.NickUserName, userId: json.UserId });\r\n        //     }\r\n        //     );\r\n        form1.resetFields()\r\n        form2.resetFields()\r\n\r\n        if (action === 'login') {\r\n            const parsedRes = storage.get(username)\r\n            if (!parsedRes) {\r\n                message.error(\"该用户尚未注册\");\r\n                return;\r\n            }\r\n            if (parsedRes.username !== username || parsedRes.password !== password) {\r\n                message.error(\"账号密码错误\");\r\n                return;\r\n            }\r\n            dispatch(login({\r\n                username\r\n            }));\r\n            message.success(\"登录成功\");\r\n        } else {\r\n            if (password !== formData.passwordAgain) {\r\n                message.error('确认密码与设置密码不一致！')\r\n                return\r\n            }\r\n            const res = storage.get(username)\r\n            if (res) {\r\n                message.error(\"该用户名已注册\");\r\n                return;\r\n            }\r\n            storage.set(username, {\r\n                username,\r\n                password,\r\n            });\r\n            dispatch(login({\r\n                username\r\n            }));\r\n            message.success(\"注册成功，即将自动登录！\");\r\n        }\r\n\r\n        setModalVisible(false);\r\n    }, [action])\r\n\r\n    const handelTabKeyChange = useCallback((key) => {\r\n        if (key === '1') {\r\n            setAction('login')\r\n        }\r\n        if (key === '2') {\r\n            setAction('register')\r\n        }\r\n    }, [])\r\n\r\n    const cancelButtonStyle = useMemo(() => {\r\n        return {\r\n            style: {\r\n                display: 'none'\r\n            }\r\n        }\r\n    }, [])\r\n    const userNameRule = useMemo(() => {\r\n        return [{\r\n            required: true,\r\n            message: 'Please input your username'\r\n        }]\r\n    }, [])\r\n    const passwordRule = useMemo(() => {\r\n        return [{\r\n            required: true,\r\n            message: 'Please input your password'\r\n        }]\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            title='用户中心'\r\n            wrapClassName='vertical-center-modal'\r\n            className=\"user-center-modal\"\r\n            visible={modalVisible}\r\n            onCancel={handleCancel}\r\n            onOk={handleOk}\r\n            okText='关闭'\r\n            cancelButtonProps={displayNoneStyle}\r\n            footer={null}\r\n            style={modalStyle}\r\n        >\r\n            <Tabs type=\"card\" onChange={handelTabKeyChange}>\r\n                <TabPane tab=\"登录\" key=\"1\" className=\"tab-pane-wrapper\">\r\n                    <Form name='login' layout='vertical' form={form1} onFinish={handleSubmitSuccess} initialValues={{ remember: true }}>\r\n                        <FormItem label=\"账户\" name='username' rules={userNameRule}>\r\n                            <Input placeholder=\"请输入您的账号\" />\r\n                        </FormItem>\r\n                        <FormItem label=\"密码\" name='password' rules={passwordRule}>\r\n                            <Input.Password placeholder=\"请输入您的密码\" />\r\n                        </FormItem>\r\n                        <FormItem style={posRightStyle}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">登录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </TabPane>\r\n                <TabPane tab='注册' key='2'>\r\n                    <Form name='zhuce' layout='vertical' form={form2} onFinish={handleSubmitSuccess} initialValues={{ remember: true }}>\r\n                        <FormItem label='账户' name='username' rules={userNameRule}>\r\n                            <Input placeholder=\"请输入您的账号\" />\r\n                        </FormItem>\r\n                        <FormItem label='密码' name='password' rules={passwordRule}>\r\n                            <Input.Password placeholder=\"请输入您的密码\" />\r\n                        </FormItem>\r\n                        <FormItem label='确认密码' name='passwordAgain' rules={passwordRule}>\r\n                            <Input.Password placeholder=\"请再次输入密码\" />\r\n                        </FormItem>\r\n                        <FormItem style={posRightStyle}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">注册</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n\r\n                </TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    )\r\n}"],"names":["FormItem","Form","TabPane","Tabs","displayNoneStyle","style","display","posRightStyle","textAlign","modalStyle","borderRadius","LoginModal","props","modalVisible","setModalVisible","useState","action","setAction","dispatch","useDispatch","form1","form2","handleCancel","useCallback","resetFields","handleOk","handleSubmitSuccess","formData","username","password","parsedRes","storage","message","login","passwordAgain","handelTabKeyChange","key","userNameRule","useMemo","required","passwordRule","title","wrapClassName","className","visible","onCancel","onOk","okText","cancelButtonProps","footer","type","onChange","tab","name","layout","form","onFinish","initialValues","remember","label","rules","placeholder","htmlType"],"sourceRoot":""}